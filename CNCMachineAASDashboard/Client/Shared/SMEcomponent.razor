
@using System.Text.Json;
@using CNCMachineAASDashboard.Client.Services;
@using CNCMachineAASDashboard.Shared.Models.AAS;
@using System.Text;
@using System.Drawing;



<div class="card border-info mb-3">

    <button class="card-header" type="button" style="background:@color" @onclick="ToggleMenu">@_se.idShort</button>
    

    @if (isMenuOpen == true)
    {
        <div class="card-body">


            <div class="card border-dark mb-3">

                <div class="collapsed">
                    @if (_se?.modelType?.name == "Property" || _se?.modelType?.name == "BasicEvent")
                    {
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <div class="row align-items-center">
                                    @_se.idShort
                                </div>
                            </li>
                            <li class="list-group-item">
                                <div class="row align-items-center">
                                    <div class="col-sm-2"><b>ValueType</b></div>
                                    <div class="col-sm-10">@_se.valueType</div>
                                </div>
                            </li>
                            <li class="list-group-item">
                                <div class="row align-items-center">
                                    <div>@_se.value</div>
                                </div>
                            </li>
                             <li class="list-group-item">
                                <div class="row align-items-center">

                                    @if (_se?.modelType?.name == "Property")
                                    {
                                        <div class="col-sm-2">
                                            <input placeholder="Enter a new @_se.idShort value" type="text" @bind-value="InputValue" @bind-value:event="oninput" @onkeypress="HandleKeyPress" />
                                        </div>
                                        
                                        <div class="col-sm-10">
                                            
                                            <button @onclick="MakeRequest" >Update</button>
                                            
                                        </div>
                                       
                                    }
                                    
                                </div>
                            </li>

                        </ul>
                       

                    }
                    else if (_se?.modelType?.name == "SubmodelElementCollection")
                    {

                        var valueItemObj = Deserialize(_se.value.ToString());
                        foreach (var item in valueItemObj)
                        {
                            
                            var SeIdShortPath1 = string.Concat(SeIdShortPath, "/", item.idShort);
                            <SMEcomponent SubmodelId="@SubmodelId" SeIdShortPath="@SeIdShortPath1" _se="item" color="#D4E4E8"></SMEcomponent>
                            
                          
                        }

                    }

                </div>

            </div>



        </div>
    }
</div>



@code {
   

    [Parameter,EditorRequired]
    public CNCMachineAASDashboard.Shared.Models.AAS.SubmodelElement? _se { get; set; }
    [Parameter,EditorRequired]
    public string? SubmodelId { get; set; }
    [Parameter]
    public string? color { get; set; }
    [Parameter,EditorRequired]
    public string? SeIdShortPath { get; set; }
    [Inject]
    public ISignalRService? signalRService  { get; set; }

    private string? InputValue { get; set; }
    
    private object? _response;
    public bool isMenuOpen = false;
    public enum DataType
    {
        String,
        Number,
        Boolean,
        DateTime
    }
    public void ToggleMenu()
    {
        isMenuOpen = !isMenuOpen;
    }
    public List<SubmodelElement> Deserialize(string str)
    {
        var Deserialized = JsonSerializer.Deserialize<List<SubmodelElement>>(str);
        return Deserialized;
    }
   
    private async void MakeRequest()
    {
        
        _response = signalRService.UpdateServerValue(SubmodelId,SeIdShortPath, InputValue);
        
        
    }
    private async void HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
           
            _response = signalRService.UpdateServerValue(SubmodelId, SeIdShortPath, InputValue);
            await InvokeAsync(StateHasChanged); 
        }
    }
}