@page "/"
@implements IDisposable
@using CNCMachineAASDashboard.Client.Pages.MaintenanceUI;
@using CNCMachineAASDashboard.Client.Services;
@using CNCMachineAASDashboard.Shared.Models.AAS;
@using Microsoft.AspNetCore.SignalR.Client;


<RadzenImage Path="Images/Logo.jpg" Style="width: 100%;hight:30px;margin-top:0px; margin-bottom:0px;" />

@if (aas != null)
{
    
    <div class="card bg-dark mb-3">
        <div class="card-header"><h4 class="text-white">Asset Administration Shell</h4></div>
        <ul class="list-group list-group-flush">

            <IdshortComponent _Idshort="@aas.idShort"></IdshortComponent>
            <IdentificationComponent _Identification="@aas.identification"></IdentificationComponent>
            <DescriptionComponent _Description="@aas.description"></DescriptionComponent>

        </ul>
    </div>

    <AssetComponent asset="@aas.asset"></AssetComponent>

}
else
{
    <h1>Sorry! Unable to receive the data</h1>
    <div class="alert alert-warning" role="alert">
        <strong>Connection Lost!</strong> Unable to connect to the AAS Server.
    </div>
  
 }
 



@code {

    private AASModel? aas;
    [Inject]
    private ISignalRService SignalRService { get; set; }

    protected override async Task OnInitializedAsync()
    {

        SignalRService.OnReceivedAAS += HandleMessageReceived;
        await SignalRService.StartConnection();

    }

    private void HandleMessageReceived(AASModel data)
    {

        aas = data;

        StateHasChanged();
    }
    public async void Dispose()
    {
        SignalRService.OnReceivedAAS -= HandleMessageReceived;
      
    }
}


 