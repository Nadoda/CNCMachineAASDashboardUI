
@using System.Text.Json;
@using CNCMachineAASDashboard.Client.Services;
@using CNCMachineAASDashboard.Shared.Models.AAS;
@using System.Text;
@using System.Drawing;

@if (_se.idShort == "OperatingHours")
{

    <RadzenCard Style="width: 245px; height: 78px; display:grid; margin-top: 0px">
        <RadzenIcon Icon="schedule" Style="font-size: 60px; width: 47px; height: 43px;color:#cd66e2"></RadzenIcon>
        <RadzenCard Style="width: 119px; height: 46px; display: inline-flex; flex-direction: row; justify-content: space-between; align-items: center; margin-left: 70px; margin-top: -50px; font-size: larger; padding:0px">
            <div style="display: inline-block;">@_se.value</div>
            <input placeholder="Edit" style="width: 40px;" type="text" @bind-value="InputValue" @bind-value:event="oninput" @onkeypress="HandleKeyPress" />
        </RadzenCard>
            <RadzenText Text="Operating Hour" TextAlign="Radzen.TextAlign.Center" Style="height: 28px; font-size: 15px" />
    </RadzenCard>

}
else if (_se.idShort== "ActualOrderStatus")
{
    <OrderComponent _se="_se"></OrderComponent>
}
else if (_se.idShort == "MaintenanceCounter")
{
 <RadzenCard Style="width: 245px; height: 78px; display: grid; margin-top: 10px">
        <RadzenIcon Icon="timelapse" Style="font-size: 60px; width: 47px; height: 43px;color:#a17fe3"></RadzenIcon>
        <RadzenCard Style="width: 119px; height: 46px; display: inline-block; margin-left: 70px; margin-top: -50px;font-size:larger;justify-content:safe center">
            <b>@_se.value</b>
       </RadzenCard>
    <RadzenText Text="Maintenance Counter" TextAlign="Radzen.TextAlign.Center" Style="height: 28px; font-size: 15px" />
  </RadzenCard>
}



else if (_se?.modelType?.name == "SubmodelElementCollection")
{
   
    var valueItemObj = Deserialize(_se.value.ToString());

    @if (_se.idShort == "MaintenanceOrderDescription" )
    {
        <AccordianComponent Title="Maintenance Order Details" SeList="valueItemObj"></AccordianComponent>
        @*<SECDialogBox Title="Maintenance Order Details" SeList="valueItemObj"></SECDialogBox>*@
    }
    else if ( _se.idShort == "MaintenanceRecord")
    {
        <AccordianComponent Title="Maintenance Record" SeList="valueItemObj"></AccordianComponent>
        @*<SECDialogBox Title="Maintenance Record" SeList="valueItemObj"></SECDialogBox>*@
    }
    foreach (var item in valueItemObj)
    {    
        var SeIdShortPath1 = string.Concat(SeIdShortPath, "/", item.idShort);
         <M_UI_SEComponent _se="item" SeIdShortPath="@SeIdShortPath1" ></M_UI_SEComponent>
    }

}

                




@code {


    [Parameter]
    public SubmodelElement? _se { get; set; }
    [Parameter, EditorRequired]
    public string? SeIdShortPath { get; set; }
    private string? InputValue { get; set; }
    [Inject]
    public ISignalRService? signalRService { get; set; }

    public List<SubmodelElement> Deserialize(string str)
    {
        var Deserialized = JsonSerializer.Deserialize<List<SubmodelElement>>(str);
        return Deserialized;
    }
    private async void HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {

            await signalRService.UpdateServerValue("MaintenanceSubmodel", SeIdShortPath, InputValue);
            await InvokeAsync(StateHasChanged);
        }
    }


}