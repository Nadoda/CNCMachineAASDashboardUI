@using CNCMachineAASDashboard.Shared.Models.AAS;

<RadzenCard Style="width: 245px; height: 78px; display: grid; margin-top: 10px">
    <div style="color:@ColorCode ;display: grid;">
        <RadzenIcon Icon="@IconSymbol" Style="font-size: 60px; width: 47px; height: 43px"></RadzenIcon>
        <RadzenCard Style="width: 119px; height: 46px; display: inline-block; margin-left: 70px;padding:0px; margin-top: -50px;overflow:auto">
            @_se.value
        </RadzenCard>
    </div>
    
    
    <RadzenText Text="Order Status" TextAlign="Radzen.TextAlign.Center" Style="height: 28px; font-size: 15px" />
</RadzenCard>

@code {
    [Parameter]
    public SubmodelElement? _se { get; set; }

    string? IconSymbol;
    string? ColorCode ="red" ;
    public enum Icons
    {
        pending_actions,
        assignment_turned_in,
        history_toggle_off,
        check_circle,
        shopping_bag
    }
    public enum Colors
    {
        darkgreen,
        darkred,
        gray
    }

    

    protected override async Task OnParametersSetAsync()
    {
        if (_se.value.ToString() == "OrderCompleted")
        {
            IconSymbol = Icons.assignment_turned_in.ToString();
            ColorCode = Colors.darkgreen.ToString();
        }
        else if (_se.value.ToString() == "OrderRequestOnProcess")
        {
            IconSymbol = Icons.pending_actions.ToString();
            ColorCode = Colors.gray.ToString();
        }
        else if (_se.value.ToString() == "OrderSubmitted")
        {
            IconSymbol = Icons.check_circle.ToString();
            ColorCode = Colors.darkgreen.ToString();
        }
        
        else
        {
            IconSymbol = Icons.history_toggle_off.ToString();
            ColorCode = Colors.gray.ToString();
        }
        await InvokeAsync(StateHasChanged);
    }
}
