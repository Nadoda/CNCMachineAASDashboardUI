@page "/MaintainanceDashboard";

@using Microsoft.AspNetCore.SignalR.Client;
@using System.Security.Cryptography;
@using System.Text.RegularExpressions;
@using System.Text;
@using CNCMachineAASDashboard.Shared.Models.AAS;
@inject NavigationManager NavigationManager;

<PageTitle>Maintenance Dashboard</PageTitle>

@*<h1>@Submodel?.idShort</h1>*@

@if (Submodel != null)
{
    <div class="card border-success mb-3">
        <div class="card-header bg-success">
            <h4>
                <div class="card-header"><h4 class="text-white">@Submodel.idShort</h4></div>
                @*<a class="text-white">@Submodel.idShort Dashboard</a>*@
            </h4>
        </div>
        <div>

            <ul class="list-group list-group-flush">
                <IdshortComponent _Idshort="@Submodel?.idShort"></IdshortComponent>
                <IdentificationComponent _Identification="@Submodel?.identification"></IdentificationComponent>
                <DescriptionComponent _Description="@Submodel?.description"></DescriptionComponent>
                <SimanticIdComponent _SemanticId="@Submodel?.semanticId"></SimanticIdComponent>
            </ul>
            
        </div>
    </div>
    


    <div class="container-fluid">

            <div class="row">
                @foreach (var se in Submodel.submodelElements)
                {
                    <div class="col-md-6">
                        <div class="grid-item">
                        <div class="card bg-dark mb-3">
                            <div class="card-header"><h4 class="text-white">@se.idShort</h4></div>

                            <SMEcomponent  _se="@se"></SMEcomponent>
                            @*
                            @if (se?.modelType?.name == "Property" || se?.modelType?.name == "BasicEvent")
                            {
                                <CollasedLogic _valueItem="@se.value" _se="@se"></CollasedLogic>
                            }

                            <div class="card-body">
                                @foreach (var item in se?.value)
                                {
                                    <CollasedLogic _valueItem="@item" _se="@se"></CollasedLogic>
                                }

                            </div>*@

                        </div>
                           
                        </div>
                    </div>
                }
            </div>
            
    </div>
}
else
{
    <h1>Sorry! There is nothing at this Page</h1>
    <h1>Check your SignalR status</h1>
}




@code {
    
    private HubConnection? hubConnection;

    public bool IsConnected;
    
    public Submodel? Submodel;

    public object? SignalRData;





    protected override async Task OnInitializedAsync()

    {

        hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.ToAbsoluteUri("/dataSend")).Build();


        hubConnection.On<Submodel>("MaintenancedataSend", data =>
        {

            SignalRData = data;

            if (data != null)
            {

                Submodel = data;

            }

            StateHasChanged();
        });
        await hubConnection.StartAsync();

        IsConnected = hubConnection.State == HubConnectionState.Connected ? true : false;
        StateHasChanged();

    }
  

}
